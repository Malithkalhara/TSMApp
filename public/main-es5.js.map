{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/rep.service.ts","webpack:///src/app/_services/supplerorder.service.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/metirial/metirial.component.ts","webpack:///src/app/metirial/metirial.component.html","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/nav-bar/nav-bar.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/rep-home/rep-home.component.ts","webpack:///src/app/rep-home/rep-home.component.html","webpack:///src/app/rep-orders/rep-orders.component.ts","webpack:///src/app/suppler-details/suppler-details.component.ts","webpack:///src/app/suppler-details/suppler-details.component.html","webpack:///src/app/suppler-item-add/suppler-item-add.component.ts","webpack:///src/app/suppler-item-add/suppler-item-add.component.html","webpack:///src/app/suppler-order-add/suppler-order-add.component.ts","webpack:///src/app/suppler-order-add/suppler-order-add.component.html","webpack:///src/app/supplerordertab/supplerordertab.component.ts","webpack:///src/app/supplerordertab/supplerordertab.component.html","webpack:///src/app/tea-quality/tea-quality.component.ts","webpack:///src/app/tea-quality/tea-quality.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","router","authenticationService","route","state","currentUser","currentUserValue","navigate","queryParams","returnUrl","url","providedIn","JwtInterceptor","request","next","token","clone","setHeaders","Authorization","handle","AuthenticationService","http","apiUri","currentUserSubject","JSON","parse","localStorage","getItem","asObservable","username","password","post","pipe","user","setItem","stringify","removeItem","value","RepService","get","shop","order","SupplerorderService","authtoken","metirialobj","console","log","fetchToken","teaquality","deleteId","item","deleteID","put","brokerID","UserService","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","HomeComponent","breakpointObserver","subscribe","data","users","logout","navigateByUrl","apiUrl","LoginComponent","formBuilder","loginForm","group","required","minLength","login","f","status","role","error","reset","controls","onSubmit","MetirialComponent","supplerorderservice","metirialadd","addMetirialDB","AddMetirial","NavBarComponent","onLogout","RegisterComponent","userService","registerForm","fname","lname","mobile","maxLength","email","nic","registerUser","err","RepHomeComponent","repservice","quantity","items","itemNo","billTotal","markedCash","markedCheque","markedCredit","routeReuseStrategy","shouldReuseRoute","mySubscription","events","event","navigated","unsubscribe","addShopForm","name","address","viewShops","getProductItems","target","checked","registerShop","getItemTeadetails","productItems","i","length","Item","SellUnitPrice","itemName","val","itemPrice","getPrice","totalPrice","push","price","calculateBill","splice","shopName","date","details","cashAmount","chequeAmount","creditAmount","addOrder","allShops","shops","logOut","addItem","toggleVisibilityCash","toggleVisibilityCheque","toggleVisibilityCredit","addShop","RepOrdersComponent","SupplerDetailsComponent","supplerorder","_flashMessagesService","brokerAddForm","vatRegNo","getTeaBrokerdetails","BrokerAdd","res","show","cssClass","timeout","msg","_deleteID","deleteItem","DeleteBroker","detail","SupplerItemAddComponent","itemadd","buyprice","sellprice","addItemDB","modelitem","modelbuyunitprice","modelsellunitprice","itemID","teaQualityData","_id","updatebuyprice","updatesellprice","updateTeaItem","DeleteTeaItem","AddItem","onUpdate","SupplerOrderAddComponent","viewSuppler","suppliers","SupplerordertabComponent","TeaQualityComponent","getqualitydetails","modeldata","qualityID","qualityupdate","updateTeaQualityDB","deletequality","DeleteTeaquality","qualityadd","addTeaQualityDB","AddTeaQuality","UpdateTeaModel","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../_services/authentication.service'\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n     \r\n        if (currentUser ) {\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../_services/authentication.service'\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization:`${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n\r\ninterface User{\r\n  token:String;\r\n  data:String;\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  apiUri='https://teastockapp.herokuapp.com';\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  public currentUser: Observable<User>;\r\n\r\n  constructor(private http: HttpClient) { \r\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    return this.currentUserSubject.value;\r\n}\r\n\r\n\r\nlogin(username: string, password: string) {\r\n    return this.http.post<any>(`${this.apiUri}/users/authenticate`, { username, password })\r\n        .pipe(tap(user => {\r\n            // login successful if there's a jwt token in the response\r\n            if (user && user.token) {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n                this.currentUserSubject.next(user);\r\n            }\r\n        }));\r\n}\r\n\r\nlogout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('currentUser');\r\n    this.currentUserSubject.next(null);\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RepService {\r\n\r\n  apiUri='https://teastockapp.herokuapp.com';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  allShops(){\r\n    return this.http.get(`${this.apiUri}/shops/all`);\r\n  }\r\n  \r\n  registerShop(shop){\r\n    return this.http.post(`${this.apiUri}/shops/add`,shop);\r\n  }\r\n\r\n  addOrder(order){\r\n    return this.http.post(`${this.apiUri}/orders/add`,order);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SupplerorderService {\r\n\r\n  authtoken:any;\r\n  apiUri='https://teastockapp.herokuapp.com';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n\r\n  fetchToken(){\r\n    this.authtoken =localStorage.getItem(\"token\");\r\n  }\r\n\r\n  addMetirialDB( metirialobj ){\r\n    console.log(metirialobj);\r\n   \r\n     return this.http.post(`${this.apiUri}/metirial/addmetiral`,metirialobj);  \r\n  }\r\n\r\n\r\n  //Order Details\r\n   getaddorderdata(){\r\n      \r\n      this.fetchToken();\r\n   }\r\n\r\n\r\n\r\n   //Tea Quality\r\n  addTeaQualityDB(teaquality){\r\n    \r\n    return this.http.post(`${this.apiUri}/TeaQuality/addteaquality`,teaquality);\r\n\r\n  }\r\n\r\n  updateTeaQualityDB(teaquality){\r\n \r\n    return this.http.post(`${this.apiUri}/TeaQuality/updateTeaQuality`,teaquality);\r\n\r\n  }\r\n\r\n  getqualitydetails(){\r\n    return this.http.get(`${this.apiUri}/TeaQuality/allteaquality`);\r\n  }\r\n\r\n\r\n  DeleteTeaquality(deleteId){\r\n   \r\n    return this.http.post(`${this.apiUri}/TeaQuality/deleteQuality`,deleteId);\r\n    \r\n  }\r\n\r\n  //Tea Item \r\n    \r\n  addItemDB(item){\r\n   \r\n    return this.http.post(`${this.apiUri}/Item/additem`,item);\r\n  }\r\n\r\n  getItemTeadetails(){\r\n    return this.http.get(`${this.apiUri}/Item/getAllItem`);\r\n  }\r\n\r\n  DeleteTeaItem(deleteID){\r\n    return this.http.put(`${this.apiUri}/Item/deleteItem`,deleteID);\r\n  }\r\n\r\n  updateTeaItem(item){\r\n    console.log(item);\r\n    return this.http.post(`${this.apiUri}/Item/updateItem`,item);\r\n  }\r\n\r\n  //Broker Details \r\n\r\n  BrokerAdd(user){\r\n    return this.http.post(`${this.apiUri}/Broker/addbroker`,user);\r\n  }\r\n\r\n  getTeaBrokerdetails(){\r\n    return this.http.get(`${this.apiUri}/Broker/getAllBroker`);\r\n  }\r\n  DeleteBroker(brokerID){\r\n    return this.http.put(`${this.apiUri}/Broker/deleteBroker`,brokerID);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  \r\n  apiUri='https://teastockapp.herokuapp.com';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  registerUser(user){\r\n    return this.http.post(`${this.apiUri}/users/register`,user);\r\n  }\r\n  registerEvent(){\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { RepHomeComponent } from './rep-home/rep-home.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\n\r\nimport { AuthGuard } from './_helpers/auth.guard';\r\n\r\nimport { SupplerOrderAddComponent } from './suppler-order-add/suppler-order-add.component';\r\nimport { MetirialComponent } from './metirial/metirial.component';\r\nimport { TeaQualityComponent } from './tea-quality/tea-quality.component';\r\nimport { SupplerItemAddComponent } from './suppler-item-add/suppler-item-add.component';\r\nimport {SupplerordertabComponent} from './supplerordertab/supplerordertab.component';\r\nimport { SupplerDetailsComponent } from './suppler-details/suppler-details.component';\r\nimport { } from './suppler-order-add/suppler-order-add.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'rep-home',\r\n    component: RepHomeComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'home',\r\n    component: HomeComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path:'register',\r\n    component: RegisterComponent\r\n  },\r\n  { \r\n    path:'addsupplerorder',\r\n    component:SupplerOrderAddComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  { \r\n    path:'app-metirial',\r\n    component:MetirialComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  { \r\n    path:'app-suppler-item-add',\r\n    component:SupplerItemAddComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  { \r\n    path:'app-tea-quality',\r\n    component:TeaQualityComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'nav-bar',\r\n    component: NavBarComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'supplernav',\r\n    component: SupplerordertabComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'supplerdetails',\r\n    component: SupplerDetailsComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  \r\n\r\n  { path: '**', redirectTo: ''}\r\n  \r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"./app.component.css\">\r\n  <title>Document</title>\r\n</head>\r\n<body>\r\n  \r\n  <div class=\"approot\" >\r\n    <router-outlet></router-outlet> \r\n  </div>\r\n</body>\r\n</html>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\r\n\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { ButtonsModule } from 'ngx-bootstrap';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { JwtInterceptor } from './_helpers/jwt.interceptor';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\n\r\nimport { RepHomeComponent } from './rep-home/rep-home.component';\r\nimport { SupplerOrderAddComponent } from './suppler-order-add/suppler-order-add.component';\r\nimport { SupplerorderService } from './_services/supplerorder.service';\r\n\r\nimport { MetirialComponent } from './metirial/metirial.component';\r\nimport { TeaQualityComponent } from './tea-quality/tea-quality.component';\r\nimport { FlashMessagesModule } from 'angular2-flash-messages';\r\nimport { SupplerItemAddComponent } from './suppler-item-add/suppler-item-add.component';\r\nimport { SupplerordertabComponent } from './supplerordertab/supplerordertab.component';\r\nimport { SupplerDetailsComponent } from './suppler-details/suppler-details.component';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport { RepOrdersComponent } from './rep-orders/rep-orders.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    NavBarComponent,\r\n\r\n    RepHomeComponent,\r\n    SupplerOrderAddComponent,\r\n    MetirialComponent,\r\n    TeaQualityComponent,\r\n    SupplerItemAddComponent,\r\n    SupplerordertabComponent,\r\n    SupplerDetailsComponent,\r\n    RepOrdersComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    ButtonsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    TabsModule.forRoot(),\r\n    MatDatepickerModule,\r\n    FlashMessagesModule.forRoot(),\r\n    MatAutocompleteModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    SupplerorderService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\n\nimport { AuthenticationService} from '../_services/authentication.service'\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit {\n\n  users:any;\n  apiUri='http://localhost:3000';\n  constructor(\n    private http: HttpClient,\n    private AuthenticationService:AuthenticationService,\n    private router: Router,\n    breakpointObserver: BreakpointObserver) {}\n\n  ngOnInit(): void {\n  }\n\n  onclick(){\n    this.http.get(`${this.apiUri}/users`).subscribe(data=>{\n      this.users=data;\n      console.log(this.users);\n    })\n  }\n  onLogout(){\n    this.AuthenticationService.logout();\n    this.router.navigateByUrl(`/login`);\n  }\n\n}\n","<app-nav-bar></app-nav-bar>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from '../_services/authentication.service'\r\nimport { from } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst apiUrl=\"http://localhost:3000\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private authenticationService: AuthenticationService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n  });\r\n  }\r\n\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onSubmit(){\r\n    this.authenticationService.login(this.f.username.value, this.f.password.value)\r\n        .subscribe(\r\n            data => {\r\n              console.log(data);\r\n              if(data['data'].status==\"active\"){\r\n                console.log(\"Activated\");\r\n                if(data['data'].role==\"medRep\"){\r\n                  console.log(\"medRep\");\r\n                  this.router.navigateByUrl(`/rep-home`);\r\n                }\r\n                if(data['data'].role==\"storeManager\"){\r\n                  console.log(\"storeManager\");\r\n                  this.router.navigateByUrl(`/nav-bar`);\r\n                }\r\n              }\r\n              if(data['data'].status==\"Inactive\"){\r\n                console.log(\"Not Activated\");\r\n                this.router.navigateByUrl(`/login`);\r\n              }\r\n            },\r\n            error => {\r\n                console.log(error);\r\n            });\r\n    this.loginForm.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"bg\">\r\n  <div style=\"margin: 0px 0px 0px 400px; padding-top: 150px;\">\r\n    <mat-card style=\"width: 500px; text-align: center; background-color: #E0DEDE;\">\r\n      <mat-card-title>Login</mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n          <p>\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n            </mat-form-field>\r\n          </p>\r\n  \r\n          <p>\r\n            <mat-form-field>\r\n              <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n            </mat-form-field>\r\n          </p>\r\n    \r\n          <div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n          </div>\r\n          <div class=\"m-3\">\r\n            Not yet a member ? <a routerLink='/register'>Sign Up</a>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SupplerorderService } from '../_services/supplerorder.service'\r\n\r\n@Component({\r\n  selector: 'app-metirial',\r\n  templateUrl: './metirial.component.html',\r\n  styleUrls: ['./metirial.component.css']\r\n})\r\nexport class MetirialComponent implements OnInit {\r\n\r\n\r\n  metirialadd:string;\r\n  constructor(\r\n    public supplerorderservice:SupplerorderService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  AddMetirial(){\r\n\r\n    const metirialobj = {\r\n      metirialadd:this.metirialadd\r\n    }\r\n   \r\n   this.supplerorderservice.addMetirialDB(metirialobj).subscribe();\r\n  }\r\n\r\n}\r\n","\r\n<br>\r\n<h2 class=\"col-md-11 text-center\">Add Metirial</h2>\r\n<br><br>\r\n<div class=\"container\">\r\n    <form (submit) = \"AddMetirial()\">\r\n        <div class=\"form-group row\">\r\n          <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Add Metirial</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Hard Plastic\" name=\"metirialadd\" [(ngModel)]=\"metirialadd\">\r\n          </div>\r\n        </div>\r\n    \r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12  text-center\">\r\n            <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService} from '../_services/authentication.service'\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  constructor(\r\n    private AuthenticationService:AuthenticationService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onLogout(){\r\n    this.AuthenticationService.logout();\r\n    this.router.navigateByUrl(`/login`);\r\n  }\r\n\r\n}\r\n","<mat-toolbar >\r\n    <mat-toolbar-row>\r\n      <h1 style=\"margin-right: 50px;\">NavBar</h1>\r\n      <span class=\"menu-spacer\"></span>\r\n      <div>\r\n        <a mat-button [routerLink]=\"'/supplernav'\"> Suppler Order </a>\r\n        <a mat-button [routerLink]=\"'/addsupplerorder'\"> Order Add </a>\r\n        \r\n        <button style=\"margin-left: 700px;\" type=\"submit\" (click)=\"onLogout()\" class=\"btn btn-primary\"><mat-icon>input</mat-icon></button>\r\n        \r\n      </div>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { error } from 'protractor';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private http: HttpClient,\n    private userService: UserService\n  ) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      fname: ['', Validators.required],\n      lname: ['', Validators.required],\n      mobile: ['', [Validators.required,Validators.maxLength(10)]],\n      email: ['', Validators.email],\n      nic: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n  });\n  }\n\n  onSubmit(){\n    this.userService.registerUser(this.registerForm.value).subscribe(\n      data=>{\n        console.log(data);\n        this.router.navigateByUrl(`/login`);\n      },\n      err=>{\n        console.log(err);\n      })\n      this.registerForm.reset();\n  }\n\n}\n","<div class=\"bg\">\r\n    <div style=\"margin: 0px 0px 0px 400px; padding-top: s50px;\">\r\n        <mat-card style=\"width: 500px; text-align: center; background-color: #E0DEDE;\">\r\n            <mat-card-title>Sign Up</mat-card-title>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"FirstName\" formControlName=\"fname\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"LastName\" formControlName=\"lname\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"Email\" formControlName=\"email\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"number\" matInput placeholder=\"Mobile No\" formControlName=\"mobile\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"NIC\" formControlName=\"nic\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n                        </mat-form-field>\r\n                    </p>\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <div>\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router, NavigationEnd } from \"@angular/router\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport * as $ from \"jquery\";\r\n\r\nimport { AuthenticationService } from \"../_services/authentication.service\";\r\nimport { RepService } from \"../_services/rep.service\";\r\nimport { SupplerorderService } from \"../_services/supplerorder.service\";\r\n\r\n@Component({\r\n  selector: \"app-rep-home\",\r\n  templateUrl: \"./rep-home.component.html\",\r\n  styleUrls: [\"./rep-home.component.css\"],\r\n})\r\nexport class RepHomeComponent implements OnInit {\r\n  addShopForm: FormGroup;\r\n  apiUri = \"http://localhost:3000\";\r\n  shops: any;\r\n  productItems: any;\r\n  quantity: any = 0;\r\n  items = [];\r\n  itemNo: any = 0;\r\n  mySubscription: any;\r\n  billTotal: any = 0;\r\n  cashAmount: any;\r\n  chequeAmount: any;\r\n  creditAmount: any;\r\n  markedCash:any=false;\r\n  markedCheque:any=false;\r\n  markedCredit:any=false;\r\n  constructor(\r\n    private router: Router,\r\n    private AuthenticationService: AuthenticationService,\r\n    private formBuilder: FormBuilder,\r\n    private repservice: RepService,\r\n    private supplerorderservice: SupplerorderService\r\n  ) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\r\n      return false;\r\n    };\r\n    this.mySubscription = this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        // Trick the Router into believing it's last link wasn't previously loaded\r\n        this.router.navigated = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.mySubscription) {\r\n      this.mySubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addShopForm = this.formBuilder.group({\r\n      name: [\"\", Validators.required],\r\n      address: [\"\", Validators.required],\r\n      mobile: [\"\", Validators.required],\r\n    });\r\n    this.viewShops();\r\n    this.getProductItems();\r\n  }\r\n\r\n  toggleVisibilityCash(e){\r\n    this.markedCash= e.target.checked;\r\n  }\r\n  toggleVisibilityCheque(e){\r\n    this.markedCheque= e.target.checked;\r\n  }\r\n  toggleVisibilityCredit(e){\r\n    this.markedCredit= e.target.checked;\r\n  }\r\n\r\n  logOut() {\r\n    this.AuthenticationService.logout();\r\n    this.router.navigateByUrl(`/login`);\r\n  }\r\n  addShop() {\r\n    this.repservice.registerShop(this.addShopForm.value).subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.viewShops();\r\n        this.addShopForm.reset();\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n  getProductItems() {\r\n    this.supplerorderservice.getItemTeadetails().subscribe((data) => {\r\n      this.productItems = data[\"result\"];\r\n      console.log(this.productItems);\r\n    });\r\n  }\r\n\r\n  getPrice(name) {\r\n    for (var i = 0; i < this.productItems.length; i++) {\r\n      if (this.productItems[i].Item === name) {\r\n        return this.productItems[i].SellUnitPrice;\r\n      }\r\n    }\r\n  }\r\n\r\n  addItem(quantity) {\r\n    this.billTotal = 0;\r\n    var itemName = $(\"#selectItem\").val();\r\n    var itemPrice = this.getPrice(itemName);\r\n    var totalPrice = itemPrice * quantity;\r\n    this.items.push({\r\n      itemName: itemName,\r\n      quantity: quantity,\r\n      price: totalPrice,\r\n    });\r\n    this.calculateBill();\r\n  }\r\n\r\n  deleteItem(item) {\r\n    this.billTotal = 0;\r\n    console.log(item);\r\n    for (var i = 0; i < this.items.length; i++) {\r\n      if (this.items[i].itemName === item) {\r\n        this.items.splice(i, 1);\r\n        this.calculateBill();\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateBill() {\r\n    for (var i = 0; i < this.items.length; i++) {\r\n      this.billTotal = this.billTotal + this.items[i].price;\r\n    }\r\n  }\r\n\r\n  addOrder() {\r\n    var shopName = $(\"#shopName\").val();\r\n    var date = $(\"#datePicker\").val();\r\n    var order = {\r\n      shopName: shopName,\r\n      date: date,\r\n      details: this.items,\r\n      billTotal: this.billTotal,\r\n      cashAmount: this.cashAmount,\r\n      chequeAmount: this.chequeAmount,\r\n      creditAmount: this.creditAmount,\r\n    };\r\n    this.repservice.addOrder(order).subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.router.navigateByUrl('/rep-home')\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n  viewShops() {\r\n    this.repservice.allShops().subscribe(\r\n      (data) => {\r\n        this.shops = data[\"data\"];\r\n        console.log(this.shops);\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div style=\"margin: 0px 150px 0px 150px;\">\r\n     <tabset>\r\n          <button style=\"margin: 20px 0px 0px 1000px;\" type=\"submit\" (click)=\"logOut()\"\r\n               class=\"btn btn-secondary btn-sm\">\r\n               <mat-icon>input</mat-icon>\r\n          </button>\r\n          <tab heading=\"Add Order\" id=\"tab1\" click=\"testClick()\">\r\n               <div style=\"width: 80%;\" class=\"text-center\">\r\n                    <h3 class=\"mb-5\">Add Order Details</h3>\r\n                    <form [formGroup]=\"addShopForm\">\r\n                         <div class=\"form-group row\">\r\n                              <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Shop</label>\r\n                              <div class=\"col-sm-10\">\r\n                                   <select class=\"form-control \" id=\"shopName\">\r\n                                        <option *ngFor=\"let shop of shops\">{{shop.name}}</option>\r\n                                   </select>\r\n                              </div>\r\n                         </div>\r\n                         <div class=\"form-group row\">\r\n                              <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Date</label>\r\n                              <div class=\"col-sm-10\">\r\n                                   <input id=\"datePicker\" type=\"text\" class=\"form-control\" bsDatepicker>\r\n                              </div>\r\n                         </div>\r\n                         <div class=\"form-group row\">\r\n                              <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Product</label>\r\n                              <div class=\"row ml-3\">\r\n                                   <select class=\"form-control col \" id=\"selectItem\">\r\n                                        <option *ngFor=\"let productItem of productItems\">{{productItem.Item}}</option>\r\n                                   </select>\r\n                                   <div class=\"col\">\r\n                                        <input type=\"number\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\"\r\n                                             [(ngModel)]=\"quantity\" placeholder=\"Quantity\">\r\n                                   </div>\r\n                                   <div class=\"col\">\r\n                                        <button class=\"btn btn-secondary\" (click)='addItem(quantity)'>\r\n                                             ADD</button>\r\n                                   </div>\r\n                              </div>\r\n                         </div>\r\n                         <div class=\"form-group\">\r\n                              <table class=\"table\">\r\n                                   <thead>\r\n                                        <tr>\r\n                                             <th scope=\"col\">#</th>\r\n                                             <th scope=\"col\">Product Item</th>\r\n                                             <th scope=\"col\">Quantity</th>\r\n                                             <th scope=\"col\">Price</th>\r\n                                             <th scope=\"col\"></th>\r\n                                        </tr>\r\n                                   </thead>\r\n                                   <tbody>\r\n                                        <tr *ngFor=\"let item of items;let i=index \">\r\n                                             <th scope=\"row\">{{i+1}}</th>\r\n                                             <td>{{item.itemName}}</td>\r\n                                             <td>{{item.quantity}}</td>\r\n                                             <td>{{item.price}}</td>\r\n                                             <td id=\"deleteButton\"><button class=\"btn btn-danger btn-sm\"\r\n                                                       (click)=\"deleteItem(item.itemName)\">Delete</button></td>\r\n                                        </tr>\r\n                                   </tbody>\r\n                              </table>\r\n                         </div>\r\n                         <div class=\"form-group row mt-5\">\r\n                              <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Total Amount</label>\r\n                              <div class=\"col-sm-10\">\r\n                                   <input class=\"form-control\" type=\"text\" value=\"{{billTotal}}\" disabled>\r\n                              </div>\r\n                         </div>\r\n                         <div class=\"form-group row\">\r\n                              <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Payment Type</label>\r\n                              <div class=\"form-check form-check-inline ml-3\">\r\n                                   <input id=\"check1\" class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleVisibilityCash($event)\" value=\"option1\">\r\n                                   <label class=\"form-check-label\" for=\"inlineCheckbox1\">Cash</label>\r\n                              </div>\r\n                              <div class=\"form-check form-check-inline\">\r\n                                   <input id=\"check2\" class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleVisibilityCheque($event)\" value=\"option2\">\r\n                                   <label class=\"form-check-label\" for=\"inlineCheckbox2\">Cheque</label>\r\n                              </div>\r\n                              <div class=\"form-check form-check-inline\">\r\n                                   <input id=\"check3\" class=\"form-check-input\" type=\"checkbox\" (change)=\"toggleVisibilityCredit($event)\" value=\"option3\">\r\n                                   <label class=\"form-check-label\" for=\"inlineCheckbox3\">Credit</label>\r\n                              </div>\r\n                         </div>\r\n                         <div class=\"form-group row \" >\r\n                              <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\"></label>\r\n                              <div class=\"mr-2 ml-3\" *ngIf=\"markedCash\">\r\n                                   <input id=\"cashType\" class=\"form-control form-control-sm\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"cashAmount\" type=\"text\" placeholder=\"Cash Amount\">\r\n                              </div>\r\n                              <div class=\"mr-2\" *ngIf=\"markedCheque\">\r\n                                   <input id=\"chequeType\" class=\"form-control form-control-sm\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"chequeAmount\" type=\"text\" placeholder=\"Cheque Amount\">\r\n                              </div>\r\n                              <div *ngIf=\"markedCredit\">\r\n                                   <input id=\"creditType\" class=\"form-control form-control-sm\" [ngModelOptions]=\"{standalone: true}\" [(ngModel)]=\"creditAmount\" type=\"text\" placeholder=\"Credit Amount\">\r\n                              </div>\r\n                         </div>\r\n                         <button (click)=\"addOrder()\" class=\"btn btn-primary\">\r\n                              Submit</button>\r\n                    </form>\r\n               </div>\r\n          </tab>\r\n          <tab heading=\"Add Shop\">\r\n               <div style=\"width: 60%;\" class=\"text-center\">\r\n                    <h3 class=\"mb-5\">Add Shop Details</h3>\r\n                    <form [formGroup]=\"addShopForm\" (ngSubmit)=\"addShop()\">\r\n                         <div class=\"form-group row\">\r\n                              <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Name</label>\r\n                              <div class=\"col-sm-10\">\r\n                                   <input type=\"email\" class=\"form-control\" id=\"colFormLabel\" formControlName=\"name\">\r\n                              </div>\r\n                         </div>\r\n                         <div class=\"form-group row\">\r\n                              <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Address</label>\r\n                              <div class=\"col-sm-10\">\r\n                                   <input type=\"email\" class=\"form-control\" id=\"colFormLabel\" formControlName=\"address\">\r\n                              </div>\r\n                         </div>\r\n                         <div class=\"form-group row\">\r\n                              <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Mobile Number</label>\r\n                              <div class=\"col-sm-10\">\r\n                                   <input type=\"email\" class=\"form-control\" id=\"colFormLabel\" formControlName=\"mobile\">\r\n                              </div>\r\n                         </div>\r\n                         <button type=\"submit\" class=\"btn btn-primary\">\r\n                              Submit</button>\r\n                    </form>\r\n               </div>\r\n          </tab>\r\n          <tab heading=\"My orders\">\r\n               <app-rep-orders></app-rep-orders>\r\n          </tab>\r\n     </tabset>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rep-orders',\r\n  templateUrl: './rep-orders.component.html',\r\n  styleUrls: ['./rep-orders.component.css']\r\n})\r\nexport class RepOrdersComponent implements OnInit {\r\n\r\n  user:any;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.user=JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    console.log(this.user['data'].id);\r\n    \r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { SupplerorderService } from '../_services/supplerorder.service'\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-suppler-details',\r\n  templateUrl: './suppler-details.component.html',\r\n  styleUrls: ['./suppler-details.component.css']\r\n})\r\nexport class SupplerDetailsComponent implements OnInit {\r\n\r\n  brokerAddForm: FormGroup;\r\n  details:any;\r\n  \r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    public supplerorder:SupplerorderService,\r\n    private _flashMessagesService: FlashMessagesService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.brokerAddForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      mobile: ['', [Validators.required,Validators.maxLength(10)]],\r\n      email: ['', Validators.email],\r\n      vatRegNo:['',[Validators.maxLength(100)]],\r\n      address:['',[Validators.maxLength(255)]]\r\n\r\n  });\r\n\r\n  \r\nthis.supplerorder.getTeaBrokerdetails().subscribe(\r\n    data=>{\r\n      this.details=data['result']; \r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n     this.supplerorder.BrokerAdd(this.brokerAddForm.value).subscribe(\r\n      (res:any)=>{\r\n        if(res.state){\r\n          this._flashMessagesService.show('Tea Item successfully Added !', { cssClass: 'alert-success', timeout: 2500 });\r\n        }\r\n        else{\r\n          this._flashMessagesService.show(res.msg, { cssClass: 'alert-success', timeout: 2500 });\r\n        }\r\n      });\r\n      this.brokerAddForm.reset();\r\n      //refresh data\r\n      this.supplerorder.getTeaBrokerdetails().subscribe(\r\n        data=>{\r\n          this.details=data['result']; \r\n        });\r\n\r\n  }\r\n\r\n  \r\n  onDelete(_deleteID){\r\n      \r\n    \r\n    const deleteItem = {\r\n      deleteID:_deleteID\r\n   }\r\n   this.supplerorder.DeleteBroker(deleteItem).subscribe(\r\n    (res:any)=>{\r\n      if(res.state){\r\n        this._flashMessagesService.show('Broker Delete Successfully!', { cssClass: 'alert-success', timeout: 2500 });\r\n      }\r\n      else{\r\n        this._flashMessagesService.show(res.msg, { cssClass: 'alert-success', timeout: 2500 });\r\n      }\r\n    }\r\n   );\r\n   \r\n   \r\n      //refresh data\r\n      this.supplerorder.getTeaBrokerdetails().subscribe(\r\n        data=>{\r\n          this.details=data['result']; \r\n        });\r\n\r\n\r\n  }\r\n  onUpdate(detail){\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<br><br>\r\n<div class=\"bg\">\r\n    \r\n    <div style=\"margin: 0px 0px 0px 200px; padding-top: s50px;\">    \r\n        <mat-card style=\"width: 800px; text-align: center; background-color: white;\">\r\n            <flash-messages></flash-messages>\r\n            <mat-card-title>Broker Details Add</mat-card-title>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"brokerAddForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"Name\" formControlName=\"name\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"VAT.Reg.No\" formControlName=\"vatRegNo\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"Address\" formControlName=\"address\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"Email\" formControlName=\"email\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"number\" matInput placeholder=\"Mobile No\" formControlName=\"mobile\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <div>\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n   \r\n</div>\r\n\r\n\r\n<br>\r\n\r\n<table class=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">#</th>\r\n      <th scope=\"col\">Name</th>\r\n      <th scope=\"col\">Mobile Number </th>\r\n      <th scope=\"col\">Email </th>\r\n      <th scope=\"col\">Vat Reg No</th>\r\n      <th scope=\"col\">Address</th>\r\n      <th scope=\"col\">Delete</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let detail of details;let i=index\">\r\n      <th scope=\"row\">{{i+1}}</th>\r\n      <td>{{detail.name}}</td>\r\n      <td>{{detail.mobile}}</td>\r\n      <td>{{detail.email}}</td>\r\n      <td>{{detail.vatRegNo}}</td>\r\n      <td>{{detail.address}}</td>\r\n     <!-- <td><button type=\"button\"  class=\"btn btn-warning\"   (click)=\"onUpdate(detail)\">Update</button></td>-->\r\n     <td><button type=\"button\" class=\"btn btn-danger\" (click)=\"onDelete(detail._id)\">Delete</button></td>\r\n    </tr>\r\n\r\n  </tbody>\r\n</table>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SupplerorderService } from '../_services/supplerorder.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\n\r\n@Component({\r\n  selector: 'app-suppler-item-add',\r\n  templateUrl: './suppler-item-add.component.html',\r\n  styleUrls: ['./suppler-item-add.component.css']\r\n})\r\nexport class SupplerItemAddComponent implements OnInit {\r\n\r\n  item:any;\r\n  buyprice:any;\r\n  sellprice:any;\r\n  details:any;\r\n  modelitem:any;\r\n  modelbuyunitprice:any;\r\n  modelsellunitprice:any;\r\n  itemID:any;\r\n  updatebuyprice:any;\r\n  updatesellprice:any;\r\n\r\n\r\n  constructor(\r\n    public supplerorder:SupplerorderService,\r\n    private _flashMessagesService: FlashMessagesService\r\n ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.supplerorder.getItemTeadetails().subscribe(\r\n      data=>{\r\n        this.details=data['result']; \r\n        // console.log(this.details);\r\n      });\r\n     \r\n  }\r\n\r\n  AddItem(){\r\n   const itemadd  = {\r\n      item:this.item,\r\n      buyprice:this.buyprice,\r\n      sellprice:this.sellprice\r\n   }\r\n  \r\n  this.supplerorder.addItemDB(itemadd).subscribe(\r\n\r\n          (res:any)=>{\r\n            if(res.state){\r\n              this._flashMessagesService.show('Tea Item successfully Added !', { cssClass: 'alert-success', timeout: 2500 });\r\n            }\r\n            else{\r\n              this._flashMessagesService.show(res.msg, { cssClass: 'alert-success', timeout: 2500 });\r\n            }\r\n          }\r\n        );\r\n      //refresh data\r\n      this.supplerorder.getItemTeadetails().subscribe(\r\n        data=>{\r\n          this.details=data['result']; \r\n          // console.log(this.details);\r\n        });   \r\n       \r\n  }\r\n\r\n//Set model data\r\nUpdateItemModel(detail){\r\n  this.modelitem = detail['Item'];\r\n  this.modelbuyunitprice = detail['BuyUnitPrice'];\r\n  this.modelsellunitprice = detail['SellUnitPrice'];\r\n  this.itemID = detail['_id'];\r\n // console.log(this.modeldata);\r\n \r\n}\r\n\r\nonUpdate(){\r\n   \r\n    const teaQualityData = {\r\n      _id:this.itemID,\r\n      item:this.modelitem,\r\n      updatebuyprice:this.modelbuyunitprice,\r\n      updatesellprice:this.modelsellunitprice\r\n    }\r\n    console.log(teaQualityData);\r\n    this.supplerorder.updateTeaItem(teaQualityData).subscribe();\r\n\r\n     //refresh data\r\n     this.supplerorder.getItemTeadetails().subscribe(\r\n      data=>{\r\n        this.details=data['result']; \r\n        // console.log(this.details);\r\n      });   \r\n    \r\n}\r\n\r\n  onDelete(_deleteID) {\r\n  \r\n    const deleteItem = {\r\n       deleteID:_deleteID\r\n    }\r\n    this.supplerorder.DeleteTeaItem(deleteItem).subscribe();\r\n\r\n    this.supplerorder.getItemTeadetails().subscribe(\r\n      data=>{\r\n        this.details=data['result']; \r\n      });   \r\n\r\n  }\r\n\r\n}","\r\n\r\n<br>\r\n<h2 class=\"col-md-11 text-center\"> Tea Item Add</h2>\r\n<br><br>\r\n<div class=\"container\">\r\n  <flash-messages></flash-messages>\r\n    <form (submit) = \"AddItem()\">\r\n        <div class=\"form-group row\">\r\n          <label  class=\"col-sm-2 col-form-label\">Tea Item Type</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Tea Packets 50g\" name=\"item\" [(ngModel)]=\"item\" required>\r\n          </div>\r\n        </div>  \r\n\r\n        <div class=\"form-group row\">\r\n          <label  class=\"col-sm-2 col-form-label\">Buy Unit Price (Rs.)</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"number\" class=\"form-control\" placeholder=\"50\" name=\"buyprice\" [(ngModel)]=\"buyprice\" required>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <label  class=\"col-sm-2 col-form-label\">Sell Unit Price (Rs.)</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"number\" class=\"form-control\" placeholder=\"75\" name=\"sellprice\" [(ngModel)]=\"sellprice\" required>\r\n          </div>\r\n        </div>\r\n    \r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12  text-center\">\r\n            <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n   <br>\r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Item Types</th>\r\n            <th scope=\"col\">Buy Unit Price </th>\r\n            <th scope=\"col\">Sell Unit Price </th>\r\n            <th scope=\"col\">Update</th>\r\n            <th scope=\"col\">Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let detail of details;let i=index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{detail.Item}}</td>\r\n            <td>{{detail.BuyUnitPrice}}</td>\r\n            <td>{{detail.SellUnitPrice}}</td>\r\n           <!-- <td><button type=\"button\"  class=\"btn btn-warning\"   (click)=\"onUpdate(detail)\">Update</button></td>-->\r\n           <td><button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#exampleModal\" (click)=\"UpdateItemModel(detail)\">Update</button></td> \r\n           <td><button type=\"button\" class=\"btn btn-danger\" (click)=\"onDelete(detail._id)\">Delete</button></td>\r\n          </tr>\r\n\r\n        </tbody>\r\n      </table>\r\n\r\n      <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" id=\"exampleModalLabel\">Tea Item Update</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <form (submit) = \"onUpdate()\">\r\n                <div class=\"form-group\">\r\n                  <label  class=\"col-form-label\">Tea Item:</label>\r\n                  <input type=\"text\" class=\"form-control\"  value=\"{{modelitem}}\" name=\"item\" [(ngModel)]=\"modelitem\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label  class=\"col-form-label\">Buy Unit Price (Rs.):</label>\r\n                  <input type=\"number\" class=\"form-control\"  value=\"{{modelbuyunitprice}}\" name=\"updatebuyprice\" [(ngModel)]=\"modelbuyunitprice\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label  class=\"col-form-label\">Sell Unit Price (Rs.):</label>\r\n                  <input type=\"number\" class=\"form-control\"  value=\"{{modelsellunitprice}}\" name=\"updatesellprice\" [(ngModel)]=\"modelsellunitprice\">\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                  <button type=\"submit\" class=\"btn btn-primary\">update</button>\r\n                </div>\r\n               \r\n              </form>\r\n            </div>\r\n           \r\n          </div>\r\n        </div>\r\n      </div>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport * as $ from \"jquery\";\r\n\r\nimport { AuthenticationService} from '../_services/authentication.service'\r\nimport { RepService } from '../_services/rep.service';\r\nimport { SupplerorderService } from '../_services/supplerorder.service';\r\n\r\n@Component({\r\n  selector: 'app-suppler-order-add',\r\n  templateUrl: './suppler-order-add.component.html',\r\n  styleUrls: ['./suppler-order-add.component.css']\r\n})\r\nexport class SupplerOrderAddComponent implements OnInit {\r\n  addShopForm:FormGroup\r\n  apiUri='http://localhost:3000';\r\n  shops: any;\r\n  productItems:any;\r\n  quantity:any=0;\r\n  items=[];\r\n  itemNo:any=0;\r\n  mySubscription: any;\r\n  suppliers:any;\r\n  constructor(private router:Router,\r\n  private AuthenticationService:AuthenticationService,\r\n  private formBuilder: FormBuilder,\r\n  private repservice:RepService,\r\n  private supplerorderservice:SupplerorderService) {\r\n    \r\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\r\n      return false;\r\n    };\r\n    this.mySubscription = this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        // Trick the Router into believing it's last link wasn't previously loaded\r\n        this.router.navigated = false;\r\n      }\r\n    });\r\n   }\r\n\r\n   ngOnDestroy() {\r\n    if (this.mySubscription) {\r\n      this.mySubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n   \r\n  this.viewSuppler();\r\n  this.getProductItems();\r\n\r\n  }\r\n\r\n  getProductItems(){\r\n    this.supplerorderservice.getItemTeadetails().subscribe(\r\n      data=>{\r\n        this.productItems=data['result'];\r\n        console.log(this.productItems);\r\n      }\r\n    )\r\n  }\r\n\r\n getPrice(name){\r\n   for(var i=0;i<this.productItems.length;i++){\r\n     if(this.productItems[i].Item===name){\r\n       return this.productItems[i].SellUnitPrice\r\n     }\r\n   }\r\n }\r\n\r\n  addItem(quantity){\r\n    var itemName=$(\"#selectItem\").val();\r\n    var itemPrice=this.getPrice(itemName);\r\n    var totalPrice=itemPrice * quantity;\r\n    this.items.push({itemName:itemName,quantity:quantity,price:totalPrice});\r\n  }\r\n\r\n  deleteItem(item){\r\n    console.log(item);\r\n    for(var i=0;i<this.items.length;i++){\r\n      if(this.items[i].itemName===item){\r\n        this.items.splice(i,1)\r\n      }\r\n    }\r\n  }\r\n  addOrder(){\r\n    var billTotal=0;\r\n    for(var i=0;i<this.items.length;i++){\r\n      billTotal=billTotal+this.items[i].price;\r\n    }\r\n    var shopName=$(\"#shopName\").val();\r\n    var date=$(\"#datePicker\").val();\r\n    var order={\r\n      shopName:shopName,\r\n      date:date,\r\n      details:this.items,\r\n      billTotal:billTotal\r\n    }\r\n    console.log(order);\r\n    this.repservice.addOrder(order).subscribe(\r\n      data=>{\r\n        console.log(data);\r\n        this.router.navigateByUrl(`/rep-home`)\r\n      },err=>{\r\n        console.log(err);\r\n        \r\n      }\r\n    )\r\n  }\r\n  viewSuppler(){\r\n    this.supplerorderservice.getTeaBrokerdetails().subscribe(\r\n      data=>{\r\n        this.suppliers=data['result'];\r\n        console.log(this.suppliers);\r\n      },err=>{\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n}\r\n","<div class=\"container\">\r\n<div style=\"width: 80%;\" class=\"text-center\">\r\n  <h3 class=\"mb-5\">Add Suppler Order Details</h3>\r\n  <form >\r\n       <div class=\"form-group row\">\r\n            <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Suppler</label>\r\n            <div class=\"col-sm-10\">\r\n                 <select class=\"form-control \" id=\"shopName\" >\r\n                      <option *ngFor=\"let supplier of suppliers\" >{{supplier.name}}</option>\r\n                 </select>\r\n            </div>\r\n       </div>\r\n       <div class=\"form-group row\">\r\n            <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Date</label>\r\n            <div class=\"col-sm-10\">\r\n                 <input id=\"datePicker\" type=\"text\"\r\n                 class=\"form-control\"\r\n                 bsDatepicker>\r\n            </div>\r\n       </div>\r\n       <div class=\"form-group row\">\r\n            <label for=\"colFormLabel\" class=\"col-sm-2 col-form-label\">Product</label>\r\n            <div class=\"row ml-3\">\r\n                 <select class=\"form-control col \" id=\"selectItem\" >\r\n                      <option *ngFor=\"let productItem of productItems\">{{productItem.Item}}</option>\r\n                 </select>\r\n                 <div class=\"col\">\r\n                      <input type=\"number\" [ngModelOptions]=\"{standalone: true}\" class=\"form-control\" [(ngModel)]=\"quantity\" placeholder=\"Quantity\">\r\n                 </div>\r\n                 <div class=\"col\">\r\n                      <button class=\"btn btn-secondary\" (click)='addItem(quantity)'>\r\n                           ADD</button>\r\n                 </div>\r\n            </div>\r\n       </div>\r\n       <div class=\"form-group\">\r\n            <table class=\"table\">\r\n                 <thead>\r\n                   <tr>\r\n                     <th scope=\"col\">#</th>\r\n                     <th scope=\"col\">Product Item</th>\r\n                     <th scope=\"col\">Quantity</th>\r\n                     <th scope=\"col\">Price</th>\r\n                     <th scope=\"col\"></th>\r\n                   </tr>\r\n                 </thead>\r\n                 <tbody>\r\n                   <tr *ngFor=\"let item of items;let i=index \">\r\n                     <th scope=\"row\">{{i+1}}</th>\r\n                     <td>{{item.itemName}}</td>\r\n                     <td>{{item.quantity}}</td>\r\n                     <td>{{item.price}}</td>\r\n                     <td id=\"deleteButton\"><button class=\"btn btn-danger btn-sm\" (click)=\"deleteItem(item.itemName)\">Delete</button></td>\r\n                   </tr>\r\n                 </tbody>\r\n               </table>\r\n       </div>\r\n       <button (click)=\"addOrder()\" class=\"btn btn-primary\">\r\n       Submit</button>\r\n  </form>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-supplerordertab',\r\n  templateUrl: './supplerordertab.component.html',\r\n  styleUrls: ['./supplerordertab.component.css']\r\n})\r\nexport class SupplerordertabComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<br>\r\n<div class=\"container\">\r\n    <tabset>\r\n        <tab heading=\"Tea Quality\" id=\"tab1\">\r\n            <app-tea-quality></app-tea-quality>\r\n        </tab>\r\n        <tab  heading=\"Tea Item\" id=\"tab2\">\r\n            <app-suppler-item-add></app-suppler-item-add>\r\n        </tab>\r\n        <tab heading = \"Tea Broker \" id=\"tab3\">\r\n           <app-suppler-details></app-suppler-details>\r\n        </tab>   \r\n    </tabset>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { SupplerorderService } from '../_services/supplerorder.service';\r\nimport { FlashMessagesService } from 'angular2-flash-messages';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-tea-quality',\r\n  templateUrl: './tea-quality.component.html',\r\n  styleUrls: ['./tea-quality.component.css']\r\n})\r\nexport class TeaQualityComponent implements OnInit {\r\n\r\n  details:any;\r\n  qualityadd:string;\r\n  deleteID:any;\r\n  modeldata:any;\r\n  qualityupdate:any;\r\n  qualityID:any;\r\n  \r\n \r\n  constructor( \r\n        public supplerorder:SupplerorderService,\r\n        public _flashMessagesService: FlashMessagesService,\r\n        private router:Router\r\n \r\n        ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.supplerorder.getqualitydetails().subscribe(\r\n      data=>{\r\n        this.details=data['result'];\r\n      });\r\n  }\r\n\r\n  //Set model data\r\n  onUpdate(detail){\r\n    this.modeldata = detail['quality'];\r\n    this.qualityID = detail['_id'];\r\n   // console.log(this.modeldata);\r\n    //console.log(this.qualityID);\r\n  }\r\n \r\n  //Get model data update\r\n UpdateTeaModel(){\r\n    const teaquality = {\r\n      qualityupdate:this.qualityupdate,\r\n      qualityID:this.qualityID\r\n    }\r\n \r\n    this.supplerorder.updateTeaQualityDB(teaquality).subscribe(\r\n      (res:any)=>{\r\n        if(res.state){\r\n          this._flashMessagesService.show('Tea quality successfully Added !', { cssClass: 'alert-success', timeout: 2500 });  \r\n        }\r\n        else{\r\n          this._flashMessagesService.show(res.msg, { cssClass: 'alert-success', timeout: 2500 });\r\n        }\r\n      });\r\n      \r\n      //refresh data\r\n      this.supplerorder.getqualitydetails().subscribe(\r\n        data=>{\r\n          this.details=data['result'];\r\n        });\r\n  }\r\n\r\n  //Delete Tea Quality\r\n  onDelete(_deleteID){\r\n\r\n    const deletequality = {\r\n       deleteID:_deleteID\r\n    }\r\n    \r\n    this.supplerorder.DeleteTeaquality(deletequality).subscribe(\r\n      (res:any)=>{\r\n        console.log(res);\r\n        if(res.state){\r\n          this._flashMessagesService.show(res.msg, { cssClass: 'alert-success', timeout: 5000 });\r\n        }\r\n        else{\r\n          this._flashMessagesService.show(res.msg, { cssClass: 'alert-danger', timeout: 2500 });\r\n        }\r\n      });\r\n      //refresh data\r\n    this.supplerorder.getqualitydetails().subscribe(\r\n      data=>{\r\n        this.details=data['result'];   \r\n      });\r\n\r\n  }\r\n\r\n\r\n  //Add Tea Quality \r\n  AddTeaQuality(){\r\n    \r\n    const teaquality = {       \r\n    qualityadd:this.qualityadd\r\n    }\r\n    \r\n    this.supplerorder.addTeaQualityDB(teaquality).subscribe(\r\n      (res:any)=>{\r\n       // console.log(res.state);\r\n          if(res.state){\r\n            this._flashMessagesService.show('Tea quality successfully Added !', { cssClass: 'alert-success', timeout: 2500 });      \r\n          }\r\n          else{\r\n           this._flashMessagesService.show(res.msg, { cssClass: 'alert-success', timeout: 2500 });\r\n         }\r\n      });\r\n      //refresh data\r\n      this.supplerorder.getqualitydetails().subscribe(\r\n        data=>{\r\n          this.details=data['result'];   \r\n          //console.log(this.details);\r\n        });\r\n  }\r\n\r\n}\r\n\r\n\r\n","\r\n<br>\r\n<div class=\"container\">\r\n     \r\n    <br>\r\n<h2 class=\"col-md-11 text-center\"> Tea Quality Add</h2>\r\n<br><br>\r\n<flash-messages></flash-messages>\r\n    <form (submit) = \"AddTeaQuality()\">\r\n        <div class=\"form-group row\">\r\n          <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Add Tea Quality</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"BOPF\" name=\"qualityadd\" [(ngModel)]=\"qualityadd\">\r\n          </div>\r\n        </div>  \r\n    \r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12  text-center\">\r\n            <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <br>\r\n      <br>\r\n      \r\n      <table class=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Quality Types</th>\r\n            <th scope=\"col\">Update</th>\r\n            <th scope=\"col\">Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let detail of details;let i=index\">\r\n            <th scope=\"row\">{{i+1}}</th>\r\n            <td>{{detail.quality}}</td>\r\n           <!-- <td><button type=\"button\"  class=\"btn btn-warning\"   (click)=\"onUpdate(detail)\">Update</button></td>-->\r\n           <td><button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#updateModel\" (click)=\"onUpdate(detail)\">Update</button></td> \r\n           <td><button type=\"button\" class=\"btn btn-danger\" (click)=\"onDelete(detail._id)\">Delete</button></td>\r\n          </tr>\r\n\r\n        </tbody>\r\n      </table>\r\n     \r\n      <div class=\"modal fade\" id=\"updateModel\" tabindex=\"-1\" role=\"dialog\"  aria-hidden=\"true\">\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h5 class=\"modal-title\" >Update Tea Quality</h5>\r\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <form (submit) = \"UpdateTeaModel()\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"recipient-name\" class=\"col-form-label\">Tea Quality</label>\r\n                  <input type=\"text\" class=\"form-control\"  value=\"{{modeldata}}\" name=\"qualityupdate\" [(ngModel)]=\"qualityupdate\">\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                  <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                  <button type=\"submit\" class=\"btn btn-primary\"  >Update</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div> \r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}