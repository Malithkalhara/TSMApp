{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/supplerorder.service.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/metirial/metirial.component.ts","webpack:///src/app/metirial/metirial.component.html","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/nav-bar/nav-bar.component.html","webpack:///src/app/package/package.component.ts","webpack:///src/app/package/package.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/suppler-order-add/suppler-order-add.component.ts","webpack:///src/app/suppler-order-add/suppler-order-add.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","router","authenticationService","route","state","currentUser","currentUserValue","navigate","queryParams","returnUrl","url","providedIn","JwtInterceptor","request","next","token","clone","setHeaders","Authorization","handle","AuthenticationService","http","apiUri","currentUserSubject","JSON","parse","localStorage","getItem","asObservable","username","password","post","pipe","user","setItem","stringify","removeItem","value","SupplerorderService","authtoken","metirialobj","console","log","fetchToken","UserService","event","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","HomeComponent","breakpointObserver","get","subscribe","data","users","logout","navigateByUrl","apiUrl","LoginComponent","formBuilder","loginForm","group","required","minLength","login","f","error","reset","controls","onSubmit","MetirialComponent","supplerorderservice","metirialadd","addMetirialDB","AddMetirial","NavBarComponent","onLogout","PackageComponent","RegisterComponent","userService","registerForm","fname","lname","mobile","maxLength","email","nic","registerUser","err","SupplerOrderAddComponent","supplerorder","paymenttype","addorder","name","getaddorderdata","alert","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../_services/authentication.service'\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n     \r\n        if (currentUser ) {\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../_services/authentication.service'\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization:`${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n\r\ninterface User{\r\n  token:String;\r\n  data:String;\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  apiUri='http://localhost:3000';\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  public currentUser: Observable<User>;\r\n\r\n  constructor(private http: HttpClient) { \r\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    return this.currentUserSubject.value;\r\n}\r\n\r\n\r\nlogin(username: string, password: string) {\r\n    return this.http.post<any>(`${this.apiUri}/users/authenticate`, { username, password })\r\n        .pipe(tap(user => {\r\n            // login successful if there's a jwt token in the response\r\n            if (user && user.token) {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n                this.currentUserSubject.next(user);\r\n            }\r\n        }));\r\n}\r\n\r\nlogout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('currentUser');\r\n    this.currentUserSubject.next(null);\r\n}\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupplerorderService {\n\n  authtoken:any;\n  apiUri='http://localhost:3000';\n\n  constructor(private http: HttpClient) { }\n\n\n\n  fetchToken(){\n    this.authtoken =localStorage.getItem(\"token\");\n  }\n\n  addMetirialDB( metirialobj ){\n    console.log(metirialobj);\n   \n     return this.http.post(`${this.apiUri}/metirial/addmetiral`,metirialobj);  \n  }\n\n   getaddorderdata(){\n      \n      this.fetchToken();\n   }\n\n\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  \r\n  apiUri='http://localhost:3000';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  registerUser(user){\r\n    return this.http.post(`${this.apiUri}/users/register`,user);\r\n  }\r\n  registerEvent(event){\r\n    return this.http.post(`${this.apiUri}/event/add`,event);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\n\r\nimport { AuthGuard } from './_helpers/auth.guard';\r\n\r\nimport { SupplerOrderAddComponent } from './suppler-order-add/suppler-order-add.component'\r\nimport{ PackageComponent } from './package/package.component';\r\nimport { MetirialComponent } from './metirial/metirial.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'home',\r\n    component: HomeComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path:'register',\r\n    component: RegisterComponent\r\n  },\r\n  { \r\n    path:'addsupplerorder',\r\n    component:SupplerOrderAddComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  { \r\n    path:'app-metirial',\r\n    component:MetirialComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  { \r\n    path:'app-package',\r\n    component:PackageComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n\r\n  { path: '**', redirectTo: ''}\r\n  \r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"./app.component.css\">\r\n  <title>Document</title>\r\n</head>\r\n<body>\r\n  \r\n  <div class=\"approot\" >\r\n    <router-outlet></router-outlet> \r\n  </div>\r\n</body>\r\n</html>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\r\n\r\nimport { ButtonsModule } from 'ngx-bootstrap';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { JwtInterceptor } from './_helpers/jwt.interceptor';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { SupplerOrderAddComponent } from './suppler-order-add/suppler-order-add.component';\r\nimport { SupplerorderService } from './_services/supplerorder.service';\nimport { PackageComponent } from './package/package.component';\nimport { MetirialComponent } from './metirial/metirial.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    NavBarComponent,\r\n    SupplerOrderAddComponent,\r\n    PackageComponent,\r\n    MetirialComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    ButtonsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatDatepickerModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    SupplerorderService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\r\n\r\nimport { AuthenticationService} from '../_services/authentication.service'\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n\r\n  users:any;\r\n  apiUri='http://localhost:3000';\r\n  constructor(\r\n    private http: HttpClient,\r\n    private AuthenticationService:AuthenticationService,\r\n    private router: Router,\r\n    breakpointObserver: BreakpointObserver) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onclick(){\r\n    this.http.get(`${this.apiUri}/users`).subscribe(data=>{\r\n      this.users=data;\r\n      console.log(this.users);\r\n    })\r\n  }\r\n  onLogout(){\r\n    this.AuthenticationService.logout();\r\n    this.router.navigateByUrl(`/login`);\r\n  }\r\n\r\n}\r\n","<app-nav-bar></app-nav-bar>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from '../_services/authentication.service'\r\nimport { from } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst apiUrl=\"http://localhost:3000\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private authenticationService: AuthenticationService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n  });\r\n  }\r\n\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onSubmit(){\r\n    this.authenticationService.login(this.f.username.value, this.f.password.value)\r\n        .subscribe(\r\n            data => {\r\n                console.log(data);\r\n                this.router.navigateByUrl(`/home`);\r\n            },\r\n            error => {\r\n                console.log(error);\r\n            });\r\n    this.loginForm.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"bg\">\r\n  <div style=\"margin: 0px 0px 0px 400px; padding-top: 150px;\">\r\n    <mat-card style=\"width: 500px; text-align: center; background-color: #E0DEDE;\">\r\n      <mat-card-title>Login</mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n          <p>\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n            </mat-form-field>\r\n          </p>\r\n  \r\n          <p>\r\n            <mat-form-field>\r\n              <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n            </mat-form-field>\r\n          </p>\r\n    \r\n          <div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n          </div>\r\n          <div class=\"m-3\">\r\n            Not yet a member ? <a routerLink='/register'>Sign Up</a>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { SupplerorderService } from '../_services/supplerorder.service'\n\n@Component({\n  selector: 'app-metirial',\n  templateUrl: './metirial.component.html',\n  styleUrls: ['./metirial.component.css']\n})\nexport class MetirialComponent implements OnInit {\n\n\n  metirialadd:string;\n  constructor(\n    public supplerorderservice:SupplerorderService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  AddMetirial(){\n\n    const metirialobj = {\n      metirialadd:this.metirialadd\n    }\n   \n   this.supplerorderservice.addMetirialDB(metirialobj);\n  }\n\n}\n","\n<br>\n<h2 class=\"col-md-11 text-center\">Add Metirial</h2>\n<br><br>\n<div class=\"container\">\n    <form (submit) = \"AddMetirial()\">\n        <div class=\"form-group row\">\n          <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Add Metirial</label>\n          <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Hard Plastic\" name=\"metirialadd\" [(ngModel)]=\"metirialadd\">\n          </div>\n        </div>\n    \n        <div class=\"form-group row\">\n          <div class=\"col-sm-12  text-center\">\n            <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\n          </div>\n        </div>\n      </form>\n\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService} from '../_services/authentication.service'\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  constructor(\r\n    private AuthenticationService:AuthenticationService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onLogout(){\r\n    this.AuthenticationService.logout();\r\n    this.router.navigateByUrl(`/login`);\r\n  }\r\n\r\n}\r\n","<mat-toolbar >\r\n    <mat-toolbar-row>\r\n      <h1 style=\"margin-right: 50px;\">NavBar</h1>\r\n      <span class=\"menu-spacer\"></span>\r\n      <div>\r\n        <a mat-button [routerLink]=\"'/events'\"> Events </a>\r\n        <a mat-button [routerLink]=\"'/creat-event'\"> Create Event </a>\r\n        <a mat-button [routerLink]=\"'/app-metirial'\"> metirial </a>\r\n        <a mat-button [routerLink]=\"'/create-activity'\"> Create Activity </a>\r\n        \r\n        <button style=\"margin-left: 700px;\" type=\"submit\" (click)=\"onLogout()\" class=\"btn btn-primary\"><mat-icon>input</mat-icon></button>\r\n      </div>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-package',\n  templateUrl: './package.component.html',\n  styleUrls: ['./package.component.css']\n})\nexport class PackageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>package works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { error } from 'protractor';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      fname: ['', Validators.required],\r\n      lname: ['', Validators.required],\r\n      mobile: ['', [Validators.required,Validators.maxLength(10)]],\r\n      email: ['', Validators.email],\r\n      nic: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n  });\r\n  }\r\n\r\n  onSubmit(){\r\n    this.userService.registerUser(this.registerForm.value).subscribe(\r\n      data=>{\r\n        console.log(data);\r\n        this.router.navigateByUrl(`/login`);\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n      this.registerForm.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"bg\">\r\n    <div style=\"margin: 0px 0px 0px 400px; padding-top: s50px;\">\r\n        <mat-card style=\"width: 500px; text-align: center; background-color: #E0DEDE;\">\r\n            <mat-card-title>Sign Up</mat-card-title>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"FirstName\" formControlName=\"fname\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"LastName\" formControlName=\"lname\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"Email\" formControlName=\"email\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"number\" matInput placeholder=\"Mobile No\" formControlName=\"mobile\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"NIC\" formControlName=\"nic\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n                        </mat-form-field>\r\n                    </p>\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <div>\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from \"@angular/forms\";\r\n\r\nimport { SupplerorderService } from '../_services/supplerorder.service'\r\n\r\n@Component({\r\n  selector: 'app-suppler-order-add',\r\n  templateUrl: './suppler-order-add.component.html',\r\n  styleUrls: ['./suppler-order-add.component.css']\r\n})\r\nexport class SupplerOrderAddComponent implements OnInit {\r\n\r\n  paymenttype: any = ['Cash', 'Check', 'Credit']\r\n\r\n  constructor(\r\n           public supplerorder:FormBuilder, \r\n          public supplerorderservice:SupplerorderService\r\n          ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.supplerorderservice.getaddorderdata();\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n   addorder = this.supplerorder.group({\r\n    name: ['']\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  onSubmit() {\r\n    alert(JSON.stringify(this.addorder.value))\r\n  }\r\n\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<div class=\"container\">\r\n    <br><br>\r\n\r\n    <form [formGroup]=\"addorder\" (ngSubmit)=\"onSubmit()\">\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Package </label>\r\n        <input type=\"text\" class=\"form-control\" id=\"name\" required>\r\n      </div>\r\n\r\n\r\n        <select formControlName=\"name\">\r\n          <option disabled>Select Payment Type</option>\r\n          <option>Choose Payment Type</option>\r\n          <option *ngFor=\"let suit of paymenttype\">{{suit}}</option>\r\n        </select>\r\n\r\n\r\n       <br>\r\n        <button>Submit</button>\r\n      </form> \r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}