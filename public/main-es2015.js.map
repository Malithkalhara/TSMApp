{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_services/authentication.service.ts","./src/app/_services/supplerorder.service.ts","./src/app/_services/user.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/metirial/metirial.component.ts","./src/app/metirial/metirial.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/package/package.component.ts","./src/app/package/package.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/suppler-order-add/suppler-order-add.component.ts","./src/app/suppler-order-add/suppler-order-add.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '../_services/authentication.service'\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n     \r\n        if (currentUser ) {\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../_services/authentication.service'\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization:`${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n\r\ninterface User{\r\n  token:String;\r\n  data:String;\r\n}\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  apiUri='http://localhost:3000';\r\n  private currentUserSubject: BehaviorSubject<User>;\r\n  public currentUser: Observable<User>;\r\n\r\n  constructor(private http: HttpClient) { \r\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n\r\n  public get currentUserValue(): User {\r\n    return this.currentUserSubject.value;\r\n}\r\n\r\n\r\nlogin(username: string, password: string) {\r\n    return this.http.post<any>(`${this.apiUri}/users/authenticate`, { username, password })\r\n        .pipe(tap(user => {\r\n            // login successful if there's a jwt token in the response\r\n            if (user && user.token) {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n                this.currentUserSubject.next(user);\r\n            }\r\n        }));\r\n}\r\n\r\nlogout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('currentUser');\r\n    this.currentUserSubject.next(null);\r\n}\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupplerorderService {\n\n  authtoken:any;\n  apiUri='http://localhost:3000';\n\n  constructor(private http: HttpClient) { }\n\n\n\n  fetchToken(){\n    this.authtoken =localStorage.getItem(\"token\");\n  }\n\n  addMetirialDB( metirialobj ){\n    console.log(metirialobj);\n   \n     return this.http.post(`${this.apiUri}/metirial/addmetiral`,metirialobj);  \n  }\n\n   getaddorderdata(){\n      \n      this.fetchToken();\n   }\n\n\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  \r\n  apiUri='http://localhost:3000';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  registerUser(user){\r\n    return this.http.post(`${this.apiUri}/users/register`,user);\r\n  }\r\n  registerEvent(event){\r\n    return this.http.post(`${this.apiUri}/event/add`,event);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\n\r\n\r\nimport { AuthGuard } from './_helpers/auth.guard';\r\n\r\nimport { SupplerOrderAddComponent } from './suppler-order-add/suppler-order-add.component'\r\nimport{ PackageComponent } from './package/package.component';\r\nimport { MetirialComponent } from './metirial/metirial.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'home',\r\n    component: HomeComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  {\r\n    path:'',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path:'register',\r\n    component: RegisterComponent\r\n  },\r\n  { \r\n    path:'addsupplerorder',\r\n    component:SupplerOrderAddComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  { \r\n    path:'app-metirial',\r\n    component:MetirialComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n  { \r\n    path:'app-package',\r\n    component:PackageComponent,\r\n    canActivate:[AuthGuard]\r\n  },\r\n\r\n  { path: '**', redirectTo: ''}\r\n  \r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"./app.component.css\">\r\n  <title>Document</title>\r\n</head>\r\n<body>\r\n  \r\n  <div class=\"approot\" >\r\n    <router-outlet></router-outlet> \r\n  </div>\r\n</body>\r\n</html>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\r\n\r\nimport { ButtonsModule } from 'ngx-bootstrap';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { JwtInterceptor } from './_helpers/jwt.interceptor';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { SupplerOrderAddComponent } from './suppler-order-add/suppler-order-add.component';\r\nimport { SupplerorderService } from './_services/supplerorder.service';\nimport { PackageComponent } from './package/package.component';\nimport { MetirialComponent } from './metirial/metirial.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    NavBarComponent,\r\n    SupplerOrderAddComponent,\r\n    PackageComponent,\r\n    MetirialComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    BsDatepickerModule.forRoot(),\r\n    ButtonsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatDatepickerModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    SupplerorderService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\r\n\r\nimport { AuthenticationService} from '../_services/authentication.service'\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n\r\n  users:any;\r\n  apiUri='http://localhost:3000';\r\n  constructor(\r\n    private http: HttpClient,\r\n    private AuthenticationService:AuthenticationService,\r\n    private router: Router,\r\n    breakpointObserver: BreakpointObserver) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onclick(){\r\n    this.http.get(`${this.apiUri}/users`).subscribe(data=>{\r\n      this.users=data;\r\n      console.log(this.users);\r\n    })\r\n  }\r\n  onLogout(){\r\n    this.AuthenticationService.logout();\r\n    this.router.navigateByUrl(`/login`);\r\n  }\r\n\r\n}\r\n","<app-nav-bar></app-nav-bar>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from '../_services/authentication.service'\r\nimport { from } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst apiUrl=\"http://localhost:3000\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private authenticationService: AuthenticationService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n  });\r\n  }\r\n\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onSubmit(){\r\n    this.authenticationService.login(this.f.username.value, this.f.password.value)\r\n        .subscribe(\r\n            data => {\r\n                console.log(data);\r\n                this.router.navigateByUrl(`/home`);\r\n            },\r\n            error => {\r\n                console.log(error);\r\n            });\r\n    this.loginForm.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"bg\">\r\n  <div style=\"margin: 0px 0px 0px 400px; padding-top: 150px;\">\r\n    <mat-card style=\"width: 500px; text-align: center; background-color: #E0DEDE;\">\r\n      <mat-card-title>Login</mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n          <p>\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n            </mat-form-field>\r\n          </p>\r\n  \r\n          <p>\r\n            <mat-form-field>\r\n              <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n            </mat-form-field>\r\n          </p>\r\n    \r\n          <div>\r\n            <button type=\"submit\" class=\"btn btn-primary\">Login</button>\r\n          </div>\r\n          <div class=\"m-3\">\r\n            Not yet a member ? <a routerLink='/register'>Sign Up</a>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { SupplerorderService } from '../_services/supplerorder.service'\n\n@Component({\n  selector: 'app-metirial',\n  templateUrl: './metirial.component.html',\n  styleUrls: ['./metirial.component.css']\n})\nexport class MetirialComponent implements OnInit {\n\n\n  metirialadd:string;\n  constructor(\n    public supplerorderservice:SupplerorderService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  AddMetirial(){\n\n    const metirialobj = {\n      metirialadd:this.metirialadd\n    }\n   \n   this.supplerorderservice.addMetirialDB(metirialobj);\n  }\n\n}\n","\n<br>\n<h2 class=\"col-md-11 text-center\">Add Metirial</h2>\n<br><br>\n<div class=\"container\">\n    <form (submit) = \"AddMetirial()\">\n        <div class=\"form-group row\">\n          <label for=\"inputEmail3\" class=\"col-sm-2 col-form-label\">Add Metirial</label>\n          <div class=\"col-sm-10\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Hard Plastic\" name=\"metirialadd\" [(ngModel)]=\"metirialadd\">\n          </div>\n        </div>\n    \n        <div class=\"form-group row\">\n          <div class=\"col-sm-12  text-center\">\n            <button type=\"submit\" class=\"btn btn-primary\">ADD</button>\n          </div>\n        </div>\n      </form>\n\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService} from '../_services/authentication.service'\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  constructor(\r\n    private AuthenticationService:AuthenticationService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onLogout(){\r\n    this.AuthenticationService.logout();\r\n    this.router.navigateByUrl(`/login`);\r\n  }\r\n\r\n}\r\n","<mat-toolbar >\r\n    <mat-toolbar-row>\r\n      <h1 style=\"margin-right: 50px;\">NavBar</h1>\r\n      <span class=\"menu-spacer\"></span>\r\n      <div>\r\n        <a mat-button [routerLink]=\"'/events'\"> Events </a>\r\n        <a mat-button [routerLink]=\"'/creat-event'\"> Create Event </a>\r\n        <a mat-button [routerLink]=\"'/app-metirial'\"> metirial </a>\r\n        <a mat-button [routerLink]=\"'/create-activity'\"> Create Activity </a>\r\n        \r\n        <button style=\"margin-left: 700px;\" type=\"submit\" (click)=\"onLogout()\" class=\"btn btn-primary\"><mat-icon>input</mat-icon></button>\r\n      </div>\r\n    </mat-toolbar-row>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-package',\n  templateUrl: './package.component.html',\n  styleUrls: ['./package.component.css']\n})\nexport class PackageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>package works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { error } from 'protractor';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      fname: ['', Validators.required],\r\n      lname: ['', Validators.required],\r\n      mobile: ['', [Validators.required,Validators.maxLength(10)]],\r\n      email: ['', Validators.email],\r\n      nic: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n  });\r\n  }\r\n\r\n  onSubmit(){\r\n    this.userService.registerUser(this.registerForm.value).subscribe(\r\n      data=>{\r\n        console.log(data);\r\n        this.router.navigateByUrl(`/login`);\r\n      },\r\n      err=>{\r\n        console.log(err);\r\n      })\r\n      this.registerForm.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"bg\">\r\n    <div style=\"margin: 0px 0px 0px 400px; padding-top: s50px;\">\r\n        <mat-card style=\"width: 500px; text-align: center; background-color: #E0DEDE;\">\r\n            <mat-card-title>Sign Up</mat-card-title>\r\n            <mat-card-content>\r\n                <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"FirstName\" formControlName=\"fname\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"LastName\" formControlName=\"lname\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"Email\" formControlName=\"email\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"number\" matInput placeholder=\"Mobile No\" formControlName=\"mobile\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"NIC\" formControlName=\"nic\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n                        </mat-form-field>\r\n                    </p>\r\n                    <p>\r\n                        <mat-form-field>\r\n                            <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n                        </mat-form-field>\r\n                    </p>\r\n\r\n                    <div>\r\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from \"@angular/forms\";\r\n\r\nimport { SupplerorderService } from '../_services/supplerorder.service'\r\n\r\n@Component({\r\n  selector: 'app-suppler-order-add',\r\n  templateUrl: './suppler-order-add.component.html',\r\n  styleUrls: ['./suppler-order-add.component.css']\r\n})\r\nexport class SupplerOrderAddComponent implements OnInit {\r\n\r\n  paymenttype: any = ['Cash', 'Check', 'Credit']\r\n\r\n  constructor(\r\n           public supplerorder:FormBuilder, \r\n          public supplerorderservice:SupplerorderService\r\n          ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.supplerorderservice.getaddorderdata();\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n   addorder = this.supplerorder.group({\r\n    name: ['']\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  onSubmit() {\r\n    alert(JSON.stringify(this.addorder.value))\r\n  }\r\n\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<div class=\"container\">\r\n    <br><br>\r\n\r\n    <form [formGroup]=\"addorder\" (ngSubmit)=\"onSubmit()\">\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"name\">Package </label>\r\n        <input type=\"text\" class=\"form-control\" id=\"name\" required>\r\n      </div>\r\n\r\n\r\n        <select formControlName=\"name\">\r\n          <option disabled>Select Payment Type</option>\r\n          <option>Choose Payment Type</option>\r\n          <option *ngFor=\"let suit of paymenttype\">{{suit}}</option>\r\n        </select>\r\n\r\n\r\n       <br>\r\n        <button>Submit</button>\r\n      </form> \r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}